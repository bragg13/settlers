/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 wood.glb --types -k --shadows --transform
Files: wood.glb [9.71KB] > /Users/andrea/Documents/models/wood-transformed.glb [5.13KB] (47%)
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    ground001: THREE.Mesh;
    ground001_1: THREE.Mesh;
    Mesh_0001: THREE.Mesh;
    Mesh_0001_1: THREE.Mesh;
  };
  materials: {
    ['Material_2.001']: THREE.MeshStandardMaterial;
    ['Material_3.001']: THREE.MeshStandardMaterial;
    ['Material_0.001']: THREE.MeshStandardMaterial;
    ['Material_1.001']: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function Wood3DTile(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/models/wood-transformed.glb'
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        name="tree1"
        position={[0.322, 0.2, -0.078]}
        rotation={[0, -0.262, 0]}
      >
        <mesh
          name="Mesh_0001"
          castShadow
          receiveShadow
          geometry={nodes.Mesh_0001.geometry}
          material={materials['Material_0.001']}
        />
        <mesh
          name="Mesh_0001_1"
          castShadow
          receiveShadow
          geometry={nodes.Mesh_0001_1.geometry}
          material={materials['Material_1.001']}
        />
      </group>
      <mesh
        name="ground001"
        castShadow
        receiveShadow
        geometry={nodes.ground001.geometry}
        material={materials['Material_2.001']}
      />
      <mesh
        name="ground001_1"
        castShadow
        receiveShadow
        geometry={nodes.ground001_1.geometry}
        material={materials['Material_3.001']}
      />
    </group>
  );
}

useGLTF.preload('/models/wood-transformed.glb');

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 sheep.glb --types -k --shadows --transform
Files: sheep.glb [23.2KB] > /Users/andrea/Desktop/settlers/packages/frontend/public/models/sheep-transformed.glb [6.36KB] (73%)
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    ground: THREE.Mesh;
    ground_1: THREE.Mesh;
    Mesh_4: THREE.Mesh;
    Mesh_4_1: THREE.Mesh;
  };
  materials: {
    Material_3: THREE.MeshStandardMaterial;
    Material_0: THREE.MeshStandardMaterial;
    Material_1: THREE.MeshStandardMaterial;
    Material_2: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function Sheep3DTile(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/models/sheep-transformed.glb'
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        name="sheep1"
        position={[-0.198, 0.2, -0.217]}
        rotation={[0, Math.PI / 3, 0]}
      >
        <mesh
          name="Mesh_4"
          castShadow
          receiveShadow
          geometry={nodes.Mesh_4.geometry}
          material={materials.Material_1}
        />
        <mesh
          name="Mesh_4_1"
          castShadow
          receiveShadow
          geometry={nodes.Mesh_4_1.geometry}
          material={materials.Material_2}
        />
      </group>
      <mesh
        name="ground"
        castShadow
        receiveShadow
        geometry={nodes.ground.geometry}
        material={materials.Material_3}
      />
      <mesh
        name="ground_1"
        castShadow
        receiveShadow
        geometry={nodes.ground_1.geometry}
        material={materials.Material_0}
      />
    </group>
  );
}

useGLTF.preload('/models/sheep-transformed.glb');
